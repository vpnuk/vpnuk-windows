name: Build/release

on:
  push:
    branches: [ master ]

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x'
      
      - name : Cache nuget
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache electron binaries
        uses: actions/cache@v2
        with:
          path: '.cache/electron'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dotnet dependencies
        run: dotnet restore VpnHelper\VpnHelper.csproj

      - name: Build cmdlet
        run: dotnet build VpnHelper\VpnHelper.csproj -c Release -o .\VpnHelper\bin\VpnHelper

      - name: Build app
        uses: samuelmeuli/action-electron-builder@v1
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK : ${{ secrets.CSC_LINK }}
        with:
          github_token: ${{ secrets.github_token }}
          build_script_name: 'build-react-nsis'
      
      - name: Prepare artifacts
        id: archive
        run: |
          $name = Get-ChildItem .\release\nsis-web\*.exe | Select -ExpandProperty Name
          Write-Output "Installer exe old name is $name"
          $name_slug = ($name -replace ' ', '-')
          Rename-Item -Path "release\nsis-web\$name" -NewName $name_slug
          Write-Output "Installer exe new name is $name_slug"
          $packName = ($name_slug -replace '.exe', '-compressed.7z')
          Write-Output "::set-output name=NAME::$packName"
          Write-Output "Compressed exe name is $packName"
          $version = $name.Substring($name.Length - 9, 5)
          Write-Output "::set-output name=VERSION::$version"
          Write-Output "App version is $version"
          7z a -t7z -mx=9 $packName .\release\nsis-web\*.exe

      - name: Create release draft
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          draft: true
          omitBody: true
          omitBodyDuringUpdate: true
          tag: "v${{ steps.archive.outputs.VERSION }}"
          name: ${{ steps.archive.outputs.VERSION }}
          artifacts: "${{ steps.archive.outputs.NAME }},release/nsis-web/*.7z,release/nsis-web/*.exe"
          token: ${{ secrets.github_token }}
